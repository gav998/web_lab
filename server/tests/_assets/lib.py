import random

def generate_task_1_1():
    '''В одной из кодировок Unicode каждый символ кодируется 32 битами.
зийклмн, ийклмноп, йклмнопрс, клмнопрсту, лмнопрстуфх, мнопрстуфхцч, нопрстуфхцчшщ - некоторые слова на тарабарском языке.
Ученик вычеркнул из списка одно слово. Заодно он вычеркнул ставшие лишними запятые и пробелы - два пробела не должны идти подряд. При этом размер нового предложения в данной кодировке оказался на 60 байт меньше, чем размер исходного предложения.
Напишите в ответе вычеркнутое слово.'''
    ru = 'абвгдежзийклмнопрстуфхцчшщъыьэюя'
    words = [ru[i:i+i] for i in range(7,14)]
    word = random.choices(words)[0]
    n = len(word)
    i = 2**random.randint(1,2)*8
    answer = word
    task = f"В одной из кодировок Unicode каждый символ кодируется {i} битами.<br><br>"
    task+= f"{', '.join(words)} - некоторые слова на тарабарском языке.<br><br>"
    task+= f"Ученик вычеркнул из списка одно слово. Заодно он вычеркнул ставшие лишними запятые и пробелы - два пробела не должны идти подряд. При этом размер нового предложения в данной кодировке оказался на {int((n+2)*i/8)} байт меньше, чем размер исходного предложения. <br><br>"
    task+= f"Напишите в ответе вычеркнутое слово.<br><br>"
    return task, answer

def generate_task_1_2():
    '''Статья, набранная на компьютере, содержит 16 страницы, на каждой странице 128 строки, в каждой строке 32 символов.
Определите информационный объём статьи в Кбайтах в кодировке UTF-16.'''
    n1 = 2**random.randint(4,6)
    n2 = 2**random.randint(6,8)
    n3 = 2**random.randint(3,8)
    n = n1*n2*n3
    i = 2**random.randint(0,2)*8
    answer = int(n*i/(8*1024))
    task = f"Статья, набранная на компьютере, содержит {n1} страницы, на каждой странице {n2} строки, в каждой строке {n3} символов. <br><br>Определите информационный объём статьи в Кбайтах в кодировке UTF-{i}.<br><br>"
    return task, answer

def generate_task_1_3():
    '''Собрание сочинений, набранное на компьютере, содержит 8 томов, в каждом томе 512 страницы, на каждой странице 256 строки, в каждой строке 128 символов.
Определите информационный объём собрания сочинений в Мбайтах в кодировке UTF-8.'''
    n0 = 2**random.randint(3,3)
    n1 = 2**random.randint(8,10)
    n2 = 2**random.randint(6,8)
    n3 = 2**random.randint(7,8)
    n = n0*n1*n2*n3
    i = 2**random.randint(0,2)*8
    answer = int(n*i/(8*1024*1024))
    task = f"Собрание сочинений, набранное на компьютере, содержит {n0} томов, в каждом томе {n1} страницы, на каждой странице {n2} строки, в каждой строке {n3} символов. <br><br>Определите информационный объём собрания сочинений в Мбайтах в кодировке UTF-{i}.<br><br>"
    return task, answer
    
def generate_task_2_1():
    pic = './tests/_assets/RU_2.PNG'
    task = f"Ваня шифрует русские слова, записывая вместо каждой буквы её номер в алфавите (без пробелов). Номера букв даны в таблице. <br><br>"
    task+= f'Некоторые шифровки можно расшифровать несколькими способами. Например, 311333 может означать "ВАЛЯ", может — "ЭЛЯ", а может — "ВААВВВ". Даны шифровки:<br><br>'
    # words = [generate_decryption_word(7, unique=False)[0] for _ in range(3)]
    # word = generate_decryption_word(7, unique=True)
    words = ['8765467','8765467']
    word = ['8765467',['8765467']]
    words.append(word[0])
    answer = word[1][0]
    random.shuffle(words)
    task+= '<br><br>'.join(words)
    task+= f'<br><br>Только одна из них расшифровывается единственным способом. Найдите её и расшифруйте. Получившееся слово запишите в качестве ответа.<br><br>'
    return task, answer, pic
    
